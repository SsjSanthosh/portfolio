{"componentChunkName":"component---src-templates-project-index-js","path":"/projects/spoofify","result":{"data":{"contentfulProject":{"projectName":"Spoofify - a Spotify clone","projectDescription":{"projectDescription":"Spoofify is a web app built to emulate virtually anything the real spotify app can do. Built from the ground up with react, redux and react-router, this app has full functionality, including browsing, playing, skipping and following playlists, tracks and more! This was an exercise to hone and showcase my skills as a frontend developer and it was a lot of fun to build something that I can use everyday. I want this to be as capable as the real thing, so I will be continually updating it with new features and designs. Do check out the site [here](https://spoofify-with-react.netlify.app/ \"Spoofify\") and a full repo [here](https://github.com/SsjSanthosh/remote-spotify \"Spoofify github repo\"). \nNote - Only premium users can control playback through the API. This is not a limitation with my app, but the spotify API. Normal users can still login, see their playback and save their tracks!"},"demo":"https://spoofify-with-react.netlify.app/","github":"https://github.com/SsjSanthosh/remote-spotify","screenshots":[{"file":{"url":"//images.ctfassets.net/a5oaq7ado59z/obCQ0xQgdJvdLN6S2qR0Y/8bd36c5e248a0ac5359a46a2cb24f4ab/playlistwithplayer.png"},"description":"Playlist page with the active track highlighted with the icon change"},{"file":{"url":"//images.ctfassets.net/a5oaq7ado59z/40XVtELVjBLXr1bPYc4aau/3877a9fcc3788f0bd2a5b220f74f9287/logoutlibrary.png"},"description":"Logged out view of the library."},{"file":{"url":"//images.ctfassets.net/a5oaq7ado59z/4zzZPsKyWpl42qPuZxS0gl/fe5a4868932b06ce110b84510be99bfd/playlistpage.png"},"description":"Playlist page "},{"file":{"url":"//images.ctfassets.net/a5oaq7ado59z/1NSTGVdKv1a1gnGQ6jv09Z/79c3f8c877218c6798e208289fd49b67/searchpage.png"},"description":"Search results page"},{"file":{"url":"//images.ctfassets.net/a5oaq7ado59z/5Tu84YjIl7bDH9KCvhngp6/ab6232f341bff46999af5c278b4bf675/loginlibrary.png"},"description":"A Logged in view of your library, see all your faves here!"},{"file":{"url":"//images.ctfassets.net/a5oaq7ado59z/C6zV41XZvKKjrAOxBzshn/0b5fc3c75ffee111b35f91e7fea71de2/redirect_page.png"},"description":"Redirect page after successful auth for the app through spotify."},{"file":{"url":"//images.ctfassets.net/a5oaq7ado59z/4sv6R3kziRkt0QVDXcpirf/f97ec3bf3c4b093a7e2b4138ec7dccfe/accentchange.png"},"description":"Library page with the accent color customized!"},{"file":{"url":"//images.ctfassets.net/a5oaq7ado59z/6zbvNrLVpKnjD0aGYhuQpW/0c9f321742e5e6415c5f8a0b9e122222/libraryloggedin.png"},"description":"Library view with the player. You can see the active playlist is detected in the icon change!"},{"file":{"url":"//images.ctfassets.net/a5oaq7ado59z/778wSvVTNVbhIXR8jTcpud/492a00edfa169ad84f769f98c00f18a8/likedsongs.png"},"description":"All your liked songs in one page."},{"file":{"url":"//images.ctfassets.net/a5oaq7ado59z/798e6nZ6IDEr6QXRCCfl7J/7d77c32db11548c2ee1ccdfa2577e6b3/artistpage.png"},"description":"Artist page, including their top tracks, related artists and albums."},{"file":{"url":"//images.ctfassets.net/a5oaq7ado59z/3CjzzQy4xxGIrNChUuQ2Gm/24eff6300a0087f8714733edc513d62a/genrepage.png"},"description":"A page with all the hot playlists of a genre."},{"file":{"url":"//images.ctfassets.net/a5oaq7ado59z/4tCZnB1wdhhP9CJnWrGTDQ/aff9981b688743e0a8d62eeb84a5e5ff/homepage.png"},"description":"Home page getting the day's curated playlists!"},{"file":{"url":"//images.ctfassets.net/a5oaq7ado59z/54AJ7M2z3ZYj3EFP78Vxqo/409e38d8ba3f4fa0527c0ad748656826/browsepage.png"},"description":"Browse page to see all the genres available."}],"questions":[{"question":"Why build this?","answer":"I wanted to build something that put together everything I've learnt and showcase it in a real world scenario. Spotify has an exhaustive API that lets me play around with a lot of interesting things."},{"question":"Why not use a backend server for the requests?","answer":"I thought about this, but given that it would be a heroku server, the response times would take a hit and I wanted the app to feel snappy if nothing else."},{"question":"Was this your own idea?","answer":"No! Actually came across this on r/reactjs where someone had built this, and I was really inspired by that. You can check out that post here - https://www.reddit.com/r/reactjs/comments/ik40e2/i_created_a_spotify_clone/"},{"question":"Have you used any ideas from that build then?","answer":"Nope. Everything here is completely my own code AND design. You can check the repos, there's absolutely no similarity in terms of code or design."},{"question":"What about the deisign?","answer":"I always loved the spotify desktop app UI more than the web player, so most of the design choices come from there, while borrowing some from the web player. I wanted to show that I can bring a design to life, not just by copying it but adding to it my own design language."},{"question":"Is the app complete?","answer":"Definitely not. There's a bunch of things I'd still like to add, maybe some bugs here and there. But functionally it's mostly done."}],"features":["Browse and search for artists, tracks, albums and more.","Fully responsive","Customizable accent color","Server side auth for non-logged in users","Implicit grant auth flow for logged in users","Add, delete tracks from library","Follow/unfollow playlists from library","Play/pause playback","Skip/rewind tracks","Transfer playback to other devices","Seek playback in realtime","Control volume for playback device"],"possibleFutureUpdates":["Using the backend for full auth flow and refresh token","Add feature to be able to create and delete playlists","Add podcasts and shows ","Add infinite scrolling","Add test coverage","More customization","Web playback through the latest playback SDK","Ironing out the bugs and polishing the design"],"techStack":["React","Redux","Sass","Node","Netlify","Heroku"]}},"pageContext":{"slug":"spoofify"}},"staticQueryHashes":["3159585216"]}